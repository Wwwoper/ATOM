name: Create Release

on:
  workflow_dispatch:

permissions:
  contents: write
  pull-requests: write
  issues: write

jobs:
  create_release:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
    
    - name: Get current date
      id: date
      run: echo "date=$(date +'%d.%m.%Y')" >> $GITHUB_OUTPUT
    
    - name: Generate new version
      id: version
      run: |
        git fetch --tags
        latest_tag=$(git describe --tags --abbrev=0 2>/dev/null || echo "v0.0.0")
        latest_version=${latest_tag#v}
        
        if [[ $latest_version =~ ^[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
          IFS='.' read -r major minor patch <<< "$latest_version"
          new_version="v${major}.${minor}.$((patch + 1))"
        else
          new_version="v0.0.1"
        fi
        
        if git rev-parse "$new_version" >/dev/null 2>&1; then
          patch=$((patch + 2))
          new_version="v${major}.${minor}.${patch}"
        fi
        
        echo "NEW_VERSION=${new_version}" >> $GITHUB_ENV
        echo "new_version=${new_version}" >> $GITHUB_OUTPUT
    
    - name: Create Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ env.NEW_VERSION }}
        release_name: Релиз ${{ env.NEW_VERSION }} от ${{ steps.date.outputs.date }}
        body: |
          # Релиз ${{ env.NEW_VERSION }}
          
          **Дата выпуска:** ${{ steps.date.outputs.date }}
          
          ## Изменения в этой версии:
          ${{ github.event.head_commit.message }}
          
          ---
        draft: false
        prerelease: false 