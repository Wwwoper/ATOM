name: Django Tests

on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_DB: atom_db
          POSTGRES_USER: atom_user
          POSTGRES_PASSWORD: 87408740
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements/base.txt
        pip install -r requirements/dev.txt
        pip install -r requirements/prod.txt
        pip install pytest pytest-django
        
    - name: Run Tests
      env:
        DEBUG: True
        SECRET_KEY: test-key-123
        ALLOWED_HOSTS: localhost,127.0.0.1
        DB_ENGINE: django.db.backends.postgresql
        DB_NAME: atom_db
        DB_USER: atom_user
        DB_PASSWORD: 87408740
        DB_HOST: localhost
        DB_PORT: 5432
        CSRF_TRUSTED_ORIGINS: http://localhost:8081,https://localhost:8081
      run: |
        cd atom
        pytest -v

  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Deploy to server
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.SERVER_HOST }}
        username: ${{ secrets.SERVER_USER }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        script: |
          cd /path/to/project
          git pull origin main
          docker-compose -f docker-compose.prod.yml up -d --build
          docker-compose -f docker-compose.prod.yml exec -T web python manage.py migrate
          docker-compose -f docker-compose.prod.yml exec -T web python manage.py collectstatic --noinput 